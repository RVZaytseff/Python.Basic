Обучение Python

Занятие №1: Конфигурация и настройка компьютера. 23.10.21
---------------------------------------------------------
1. Конфигурация компьютера
   - OS
   - CPU - Процессор и быстродействие.
   - RAM - Оперативная память

2. Установка программы CPU-Z
   - слоты памяти

3. Установка Chrome & plugins Google Translate

4. Установка Notepad++

5. Установка Punto Switcher

6. Установка Python + PyScripter

7. Первая программа


Занятие №2: Алгоритмы. Ошибки программирования. 30.10.21
---------------------------------------------------------
Задача: Убрать из фразы повторяющиеся слова.

Алгоритм №1: 
- создать пустой список для неповторяющихся слов,
- последовательный просмотр всех слов первоначальной фразы, 
- если слово новое - записать его в список для неповторящихся слов,
- для того, что бы определить новое слово или нет надо проверить, есть ли такое же слово в списке неповторяющихся слов. Если есть - пропустить его и взять следующее слово из фразы. Если такого в списке нет - добавить в список.

Алгоритм №2:
- последовательный просмотр всех слов первоначальной фразы, 
- проверить, есть ли такое же слово в хвосте списка: если есть - удалить из хвоста такое же слово.

Алгоритм №3:
- все слова фразы записать в новое множество. 

Алгоритм №4:
- создать пустой словарь, где в качестве ключей будут неповторяющиеся слова, а в качестве значений - всё что угодно, например: пусто, количество повторений этого слова, номера позиций слова в исходной фразе.
- последовательный просмотр всех слов первоначальной фразы, 
- если слово в словаре есть, тогда увеличить к значению счётчика на 1
- если слова в словаре нет, тогда записать его в словарь со значением 1.
 
Разбор ошибок программирования:
Вариант №1: Этот безумный безумный безумный этот мир
Вариант №2: Этот чудесный и такой безумный, безумный, безумный мир! 


Занятие №3: Алгоритмы. Структуры данных. 06.11.21
---------------------------------------------------------
- Set
-Dictionary


Занятие №4: Рекурсивные функции. Файловые операции. Исключения. 13.11.21
---------------------------------------------------------
- В качестве рекурсии можно взять и такой пример:
убрать произвольное количество пробелов в строке и заменить их на один пробел. 
- тот же пример написать в виде итерации

- Файловые операции: чтение, запись, дописать в конец
- Исключения/Ошибки выполнения программы
- подключение новых библиотек

Домашнее задание: подключить библиотеки
- sys
- numpy
- pandas
- scipy
- matplotlib
- sklearn


Занятие №5: Операции с картинками. 20-27.11.21
---------------------------------------------------------
- модель отображения картинки на экране дисплея
- цветовая модель RGB
- Библиотека PIL:чтение и просмотр файлов с картинками
- операции с картинками
  -- сделать из цветной фотографии чёрно-белую
  -- увеличить/уменьшить яркость
  -- получить негатив

- Рисование: прямоугольник, прямоугольная рамка

Домашнее задание:
     1. Написать функцию преобразования фотографии
        - Сеппия
        - Плакат
     2. Нарисовать круг по заданному центру, радиусу и ширине линии.


Занятие №6: Компьютерное зрение. 04-05.12.21
---------------------------------------------------------
- библиотека matplotlib
- библиотека OpenCV - Computer Vision
- графические примитивы
- Нейронные сети, Свёрточные сети CNN
- Пример CNN №1: распознавание лиц
- Пример CNN №2: распознавание возраста человека


--------------------------------------------------------
Занятие №7: Книга "A Byte of Python"
------------------------------------
1. Строки
# функция .format
Задачи: 
	- распечатать кассовый чек, где все строки текста находится посредине.
	- распечатать число 1/7 с точночтью до 14 знаков
Задача:
	- Проверить, является ли введённая строка/предложение полиндромом
		(прочитать строку наоборот)
Задача:
	- поменять значения нескольких переменных 

2. Операции
    print(1**-1)
    print(1**0)
    print(0**1)
    print(0**0)
  - найти целочисленное решение уравнения: a*x + b = c, где a,b и с - целые числа
4. Логические операции:
    print(False & True)
    print(False | True)
    print(0|True)
    print(1|True)
    print(2|True)
    print(2&True)
    print(False==0)
    print(True==1)
    print(False == True + ~False)
    print(False + True == False - ~False)
    print(~False == ~True - ~False)
    print(~True==~False + False + ~False)
    print(~False&~True == ~True)
    print(False == True + ~False)

3. Порядок операций
    print(1+2*0**-0/~True)

4. Как определить каталог, в котором была запущена программа?
	import os; 
	print(os.getcwd())

5. Функции и передача параметров
- Какой результат выполнения программы
	def change(x):
		x += 1
	
	x = 1
	change(x)
	print(x)

# Какой результат выполнения программы
    def changeList(list):
        list.append(3)
    list = [1,2]
    changeList(list)
    print(list)

6. Операции со списками
# Какой результат выполнения блока команд
    bmw = ['M8', 'X5', 'Z4']
    cars = bmw
    cars.append('CHEROKEE')
    print('All cars: ', cars)
    print('bmw: ', bmw)

# Какой результат выполнения блока команд
    cars = ['CHEROKEE', 'M8', 'X5', 'Z4']
    bmw = cars
    bmw.remove('CHEROKEE')
    print('All cars: ', cars)
    print('bmw: ', bmw)

# Какой результат выполнения блока команд
    cars = ['CHEROKEE', 'M8', 'X5', 'Z4']
    bmw = cars[1:]
    print('All cars: ', cars)
    print('bmw: ', bmw)

7. Операции над множествами
# Какой результат выполнения блока команд
    cars = set(['CHEROKEE', 'M8', 'X5', 'Z4'])
    bmw =  set(['8 SERIES', 'M8', 'X5', 'Z4'])
    print('cars & bmw: ', cars & bmw)
    print('cars | bmw: ', cars | bmw)
    print('cars ^ bmw: ', cars ^ bmw)
    print('bmw ^ cars: ', bmw ^ cars)

# Написать оптимальную функцию объединения уникальных элементов из нескольких списков
    print list(set().union(a, b, c, d))
  
8. Классы, абстрактные классы и наследование, переопределение полей и методов класса.
#-- Классы
'''
Написать класс Car, включающий данные о машине:
  - фирма-производитель
  - марка машины
  - год выпуска машины
  - цена
  - цвет

Для класса машин написать функцию печати содержимого полей класса
в формате json-строки вида:
    {имя_поля_1:значение_поля_1, имя_поля_2:значение_поля_2, ....}

Создать список машин, имеющихся на складе и отсортировать:
    - по дате выпуска машины
    - по стоимости по возрастанию и убыванию цены
    - по цвету
'''

# Изучить: 
#Пример реализации обратного call back'a с использованием классов
#https://code.activestate.com/recipes/580788-implementing-class-based-callbacks-in-python/?in=lang-python

9. Функциональное программирование.
# Изучить: 
# Пример реализации обратного call back'a с использованием функций
# https://code.activestate.com/recipes/580787-implementing-function-based-callbacks-in-python/?in=lang-python

10. Область видимости переменных
- Локальные переменные
- Глобальные переменные
- нелокальная (nonlocal) область видимости/нет замыкания для полей функции, вложенной в другую функцию или модуль

11. Пакеты, импорт пакета из библиотеки
